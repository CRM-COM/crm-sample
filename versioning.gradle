
versioning {
    
    tagPrefix "v"            // Optional. Default is empty.
    
    keywords {
    
        major "[major]"      // Optional. By default it never upgrades the major version.
        minor "[feature]", "[minor]"           // Required
        patch "[bug]", "[patch]"    // Required
    }
}


if (project.hasProperty('release')) {
	version = versioning.name()
} else {
	version = "${versioning.version().major.toInteger()}.${versioning.version().minor.toInteger()}-SNAPSHOT"
}

ext.getCommitId = { ->
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine 'git', 'rev-parse', '--short' , 'HEAD'
		standardOutput = stdout
	}
	return stdout.toString().trim()
}

task versionTxt()  {
    doLast {
        new File("$projectDir/version.txt").text = "$commitId"
    }
}