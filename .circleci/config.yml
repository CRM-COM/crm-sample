version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:11-jdk

    working_directory: ~/vizulink

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout
      - attach_workspace:
          at: /circleci/workspace
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run:
          name: Determine version
          command: |
            ./gradlew updateVersion versionTxt
            cp version.txt /circleci/workspace
            cat version.txt

      - run:
          name: Build
          command: ./gradlew build

      - run:
          name: Create docker images
          command: |
            export VERSION=`echo latest`
            echo "$VERSION" >> version.txt
            echo "Building image $VERSION"

            ./gradlew docker
      - persist_to_workspace:
          root: .
          paths:
            - version.txt
      - run:
          name: Create docker cache
          command: mkdir -p docker-cache
      - persist_to_workspace:
          root: .
          paths:
            - docker-cache
      - run:
          name: Add docker images to cache
          command: |
            export VERSION=`cat version.txt`

            docker save -o docker-cache/member-image.tar eu.gcr.io/crm-ecenter/member-service:${VERSION}
            docker save -o docker-cache/gateway-image.tar eu.gcr.io/crm-ecenter/gateway-service:${VERSION}

      - persist_to_workspace:
          root: .
          paths:
            - docker-cache

  deploy-dev:
    working_directory: ~/vizulink
    docker:
      - image: kaktooss/k8s:latest
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: .

      - run:
          name: Load docker image from cache
          command: |
            docker load --input docker-cache/member-image.tar
            docker load --input docker-cache/gateway-image.tar

      - run:
          name: Google authentication
          command:  |
            export GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gcp-key.json
            echo ${GCLOUD_SERVICE_KEY} | base64 --decode > ${GOOGLE_APPLICATION_CREDENTIALS}
            gcloud auth activate-service-account --key-file ${GOOGLE_APPLICATION_CREDENTIALS}
            gcloud auth configure-docker

      - run:
          name: Push docker images
          command: |
            export VERSION=`cat version.txt`

            docker push eu.gcr.io/crm-ecenter/member-service:${VERSION}
            docker push eu.gcr.io/crm-ecenter/gateway-service:${VERSION}
      - run:
          name: Set current context
          command: gcloud container clusters get-credentials crm-ecenter-cluster --zone europe-west2-b --project crm-ecenter

      - run:
          name: Deploy
          command: |
            export VERSION=`cat /circleci/workspace/version.txt`
            echo "Version $VERSION"

            for i in .helm/*; do
              helm upgrade --install ${i##*/} --namespace=backend --set-string image.tag=$VERSION $i
            done

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build:
          context: dev-crm
      - deploy-dev:
          context: dev-crm
          requires:
            - build
          filters:
            branches:
              only: master

